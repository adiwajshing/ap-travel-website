openapi: 3.0.1
info:
  title: Best of Asia (REST API)
  description: >-
    Backend for an E-Travel Project (Ashoka University) in form of a REST API
    architecture.
  version: 1.0.0
  contact: {}
servers:
  - url: 'http://127.0.0.1:5000/'
tags:
  - name: User Endpoints
    description: All User Operations
  - name: Booking
    description: Booking routes
  - name: Review
    description: Review routes
  - name: Navigation
    description: Navigation routes
paths:
  /api/signup:
    post:
      tags:
        - User Endpoints
      summary: New signup
      operationId: signup
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                phone_number:
                  type: string
              required:
                - name
                - email
                - password
                - phone_number
      responses:
        '200':
          description: Succesfully added user. Returns access token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                  refreshToken:
                    type: string
        '400':
          description: Bad input
          content: {}
        '401':
          description: User already exists or Unauthorized
      parameters: []
  /api/google-signup:
    put:
      tags:
        - User Endpoints
      summary: Add user to DB after Google Signup
      operationId: GoogleSignup
      responses:
        '200':
          description: Succesfully added user in DB or user already exists in DB.
      security:
        - Bearer: []
      parameters: []
  /api/login:
    post:
      tags:
        - User Endpoints
      summary: Login with email and password
      operationId: login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Succesfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  idToken:
                    type: string
                  refreshToken:
                    type: string
        '400':
          description: Bad input
          content: {}
        '401':
          description: Unauthorized
      parameters: []
  /api/logout:
    get:
      tags:
        - User Endpoints
      summary: Logout and revoke tokens
      operationId: logout
      responses:
        '200':
          description: Succesfully logged out and revoked tokens
      security:
        - Bearer: []
      parameters: []
  /api/profile:
    get:
      tags:
        - User Endpoints
      summary: View Profile Section
      operationId: viewUser
      responses:
        '200':
          description: Returns Profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  phone_number:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content: {}
      security:
        - Bearer: []
      parameters: []
  /api/profile/:
    patch:
      tags:
        - User Endpoints
      summary: Edit Profile
      operationId: editProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone_number:
                  type: string
      responses:
        '200':
          description: Succesfully edited user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  phone_number:
                    type: string
        '400':
          description: Bad input
          content: {}
        '401':
          description: Unauthorized
      security:
        - Bearer: []
      parameters: []
  /api/:
    get:
      summary: Homepage data containing name of cities
      description: ''
      parameters: []
      operationId: Homepage
      responses:
        '200':
          description: City data found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cities'
        '404':
          description: Bad response
      tags:
        - Navigation
  /api/fuzzy:
    get:
      summary: Gets data of all hotels that relate to query
      description: ''
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: city
          in: query
          required: false
          schema:
            type: string
            enum:
              - Mumbai
              - New Delhi
              - Tokyo
              - Bengaluru
              - Dubai
              - Hong Kong
              - Hyderabad
              - Singapore
              - Pune
      operationId: Universal Hotel search in search bar
      responses:
        '200':
          description: Search data returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fuzzyhotel'
        '400':
          description: Invalid Search Term
        '404':
          description: No Such City
      tags:
        - Navigation
  /api/search:
    get:
      summary: Search response data
      description: ''
      parameters:
        - name: city
          in: query
          required: false
          schema:
            type: string
            default: ''
        - name: q
          in: query
          required: true
          schema:
            type: string
            default: ''
        - name: check_In
          in: query
          required: false
          schema:
            type: string
        - name: check_Out
          in: query
          required: false
          schema:
            type: string
      operationId: Search
      responses:
        '200':
          description: Search results generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hotelSearch'
        '400':
          description: Invalid search term
      tags:
        - Navigation
  /api/advsearch:
    get:
      summary: performs advanced search using tags
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: city
          in: query
          required: false
          schema:
            type: string
            enum:
              - Mumbai
              - New Delhi
              - Tokyo
              - Bengaluru
              - Dubai
              - Hong Kong
              - Hyderabad
              - Singapore
              - Pune
        - name: check_In
          in: query
          required: false
          schema:
            type: string
        - name: check_Out
          in: query
          required: false
          schema:
            type: string
      operationId: search using tags
      responses:
        '200':
          description: Search data returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hotelSearch'
        '400':
          description: Invalid Search Term
        '404':
          description: No Such City
      tags:
        - Navigation
  '/api/city/{city}':
    get:
      summary: Gets data of hotels according to city
      description: ''
      parameters:
        - name: city
          in: path
          required: true
          schema:
            type: string
            enum:
              - Mumbai
              - Delhi
              - Tokyo
              - Bengaluru
              - Dubai
              - Hong Kong
              - Hyderabad
              - Singapore
              - Pune
          description: City name
      operationId: City wise search
      responses:
        '200':
          description: Hotels in city found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hotelSearch'
        '404':
          description: City not found
      tags:
        - Navigation
  '/api/hotel/{hotelId}':
    get:
      summary: gets all hotel data
      description: ''
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      operationId: Hotel details
      responses:
        '200':
          description: Hotel details found
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/hotelSearch'
        '404':
          description: Hotel Not Found
      tags:
        - Navigation
  '/api/hotel/{hotelId}/reccomendations':
    get:
      summary: Gets other recommendations for selected hotel
      description: ''
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      operationId: Recommendations
      responses:
        '200':
          description: Recommendations generated
          content:
            application/json:
              schema: {}
        '404':
          description: Hotel Not Found
      tags:
        - Navigation
  /api/profile/bookings:
    get:
      summary: gets all bookings of user
      description: ''
      parameters: []
      operationId: View bookings
      responses:
        '200':
          description: user booking data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookingDetails'
        '401':
          description: Unauthorized
        '404':
          description: User booking data not found
      tags:
        - Booking
    put:
      summary: add booking
      description: ''
      parameters: []
      operationId: Add booking
      responses:
        '200':
          description: Booking added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookingDetails'
        '400':
          description: Bad response
        '401':
          description: Unauthorized
      tags:
        - Booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/booking'
              
  '/api/profile/bookings/{bookingId}':
    delete:
      summary: Delete booking using booking ID
      description: ''
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      operationId: Delete booking
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookingDetails'
        '201':
          description: Description
        '401':
          description: Unauthorized
      tags:
        - Booking
    patch:
      summary: Edit booking
      description: ''
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: string
      operationId: Edit booking
      responses:
        '200':
          description: edited booking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookingDetails'
        '400':
          description: Booking not found
        '401':
          description: Unauthorized
      tags:
        - Booking
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/booking'
  '/api/hotel/{hotelId}/review':
    put:
      summary: add review to hotel
      description: ''
      parameters:
        - name: hotelId
          in: path
          required: true
          schema:
            type: string
      operationId: Add review
      responses:
        '200':
          description: Review added to hotel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hotelReviews'
        '400':
          description: No data sent
        '401':
          description: Unauthorized
      tags:
        - Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addReview'
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  links: {}
  callbacks: {}
  
  schemas:
    cities:
      type: object
      properties:
        cityName:
          type: object
          properties:
            destinationId:
                type: string
            name:
                type: string
                example: 'Mumbai'
            thumbnail:
                type: string
                description: 'URL for thumbnail'
                
    booking:
      type: object
      properties:
        bookingDetails:
          type: object
          properties:
            bookingName:
              type: string
            check_In:
              type: string
            check_Out:
              type: string
            guests:
              type: number
            room:
              type: object
              properties:
                roomType:
                  type: number
                  example: 'Standard Room: 1'
        bookingId:
          type: string
        hotelId:
          type: string
        price: 
          type: number
        status:
          type: string
          enum: ['booked', 'cancelled', 'visited', 'favourite']
        timestamp: 
          type: string
        title:
          type: string
          example: 'Hotel Viva Palace, Delhi'

    hotel:
      type: object
      properties:
        city:
          type: string
          enum: ["Mumbai", "New Delhi", "Tokyo", "Bengaluru", "Dubai", "Hong Kong", "Hyderabad", "Singapore" , "Pune"]
        destinationId: 
          type: string
        id: 
          type: number
        neighbourhood: 
          type: string
        price: 
          type: object
          properties: 
            before_price:
              type: number
            currency:
              type: string
            current_price:
              type: number
            discounted:
              type: boolean 
            savings_amount: 
              type: number
            savings_percent:
              type: number
              minimum: 0
              maximum: 100
        rating: 
          type: number
          minimum: 0.0
          maximum: 10.0
        starRating: 
          type: number
          minimum: 0
          maximum: 5
        thumbnail: 
          type: string
          description: 'URL for thumbnail'
        title:
          type: string
          example: 'Hotel Viva Palace, Delhi'
    
    bookingDetails:
      type: array
      items:
        $ref: '#/components/schemas/booking'
   
    hotelSearch:
      type: array
      items:
        $ref: '#/components/schemas/hotel'
    
    fuzzyhotel:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
          starRating:
            type: number
            maximum: 5
            minimum: 0
          title:
            type: string
            example: 'Hotel Viva Palace, Delhi'
        
    hotelReviews:
      type: object
      properties:
        reviews:
          type: array
          items:
            type: object
            properties:
              rating:
                type: number
                minimum: 1.0
                maximum: 10.0
              review:
                type: string
              title:
                type: string
              
    addReview:
      type: object
      required:
      - rating
      - review
      - title
      properties:
        rating:
          type: number
          minimum: 1.0
          maximum: 10.0
        review:
          type: string
        title:
          type: string
                
security: []